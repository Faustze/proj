[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "project"
version = "0.1.0"
description = "Flask web application with SQLAlchemy and Alembic"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
]
keywords = ["flask", "web", "api", "sqlalchemy", "alembic"]
requires-python = ">=3.10"

[project.scripts]
project-run = "run:main"
project-init-db = "app.database:init_db"

dependencies = """
    flask>=2.3.0
    sqlalchemy>=2.0.0
    alembic>=1.12.0
    psycopg2-binary>=2.9.7
    pydantic-settings>=2.0.0
    python-dotenv>=1.0.0
    bcrypt>=4.0.0
    pyjwt>=2.8.0
"""

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "types-psycopg2>=2.9.0",
]
prod = [
    "gunicorn>=21.2.0",
]
test = [
    "coverage>=7.3.0",
    "factory-boy>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/Faustze/proj.git"
Documentation = "https://github.com/Faustze/proj.git/docs"
Repository = "https://github.com/Faustze/proj.git"

[tool.setuptools]
packages = ["app"]
include-package-data = true

[tool.setuptools.package-data]
app = ["templates/*", "static/*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | alembic/versions
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = ["flask_cors.*", "flask_talisman.*"]
ignore_missing_imports = true

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/alembic/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.flake8]
exclude = [
    "venv/",
    ".venv/",
    "build/",
    "dist/",
    "migrations/"]
